[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "semantic-lexicon"
version = "0.2.0"
description = "Production-ready NumPy-based semantic lexicon with automation workflows."
authors = [
    {name = "Semantic Lexicon Team", email = "team@example.com"},
]
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.9"
keywords = ["nlp", "semantics", "automation", "persona"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "numpy>=1.24",
    "typer>=0.9,<0.12",
    "PyYAML>=6",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4",
    "pytest-cov>=4",
    "mypy>=1.5",
    "ruff>=0.4",
    "black>=23",
]
docs = [
    "mkdocs>=1.5",
    "mkdocs-material>=9",
]
examples = [
    "pandas>=2",
]

[project.urls]
Homepage = "https://github.com/example/semantic-lexicon"
Documentation = "https://example.com/semantic-lexicon/docs"
Repository = "https://github.com/example/semantic-lexicon"

[project.scripts]
semantic-lexicon = "semantic_lexicon.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"semantic_lexicon.data" = ["*.json"]

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.ruff]
line-length = 88
select = ["E", "F", "I", "B", "UP"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.9"
ignore_missing_imports = true
strict_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra"
testpaths = ["tests"]

[tool.coverage.run]
branch = true
source = ["semantic_lexicon"]
